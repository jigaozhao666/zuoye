1.虚拟dom重写
  虚拟dom将重头开始重写，更多编译时的提示来减少运行时的开销。重写将包括更有效的代码来创建虚拟节点
2.优化slot生成
  目前在vue中，重新渲染父组件，则子组件也会跟着渲染。使用vue3，可以单独渲染父级和子级
3.静态树提升
  使用静态树提升，就意味着vue3.0的编译器检测到什么是静态的，然后将其提升，从而降低了渲染成本。它能够跳过patching整棵树
4.静态属性提升
  静态属性提升，vue3.0跳过不会改变的patching节点
5.基于proxy的Observation
  目前的响应式系统是使用带有Object.difineProperty的getter和setter,vue3.0将使用es6的proxy作为其观察机制，这消除了之前的警告，速度加倍
  仅使用一半内存
